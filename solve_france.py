# -*- coding: utf-8 -*-
"""

Solving and plotting the TSP optimization problem using ant system
for a route connecting the french regional capitals. Reads npz file
generated by `get_routes.py`

Data for plotting the regions can be downloaded in:
https://biogeo.ucdavis.edu/data/gadm3.6/shp/gadm36_FRA_shp.zip
under 2018 GADM license
The data are freely available for academic use and other non-commercial use.

http://wjgsp.com/ant-system-python/

Wagner Gon√ßalves Pinto
Feburary 2021
wjgsp.com

"""

import numpy as np

import cartopy.feature
import cartopy.crs as ccrs
from cartopy.io import shapereader
import matplotlib.pyplot as plt

import ant_system

if __name__ == '__main__':
    
    # parameters
    parameters = dict(
        evaporation = 0.5, # (ref. 0.5)
        alpha = 1.0, # importance of trail (ref. 1)
        beta = 5.0, # visibility (ref. 5)
        Q = 100, # quantity of laided trail (ref. 100)
        c = 0.5, # initial pheromone level
    )
    
    filename = 'data/routes_france_capitals_n13.npz'
    
    data = np.load(filename,allow_pickle=True)
    asystem = ant_system.AntSystem(
                    nodes=data['coordinates'],
                    distance=data['dij'],
                    **parameters
                    )
    print('\nOptimizing route...')
    asystem.solve(NC_max=100)
    initial_tour = asystem.best_tour[1,:]
    final_tour = asystem.best_tour[-1,:]
    
    
    
    print('\nPlotting map...')
    fig = plt.figure(figsize=(6,5.5),constrained_layout=True)
    
    central_lon, central_lat = 2.5, 46.5
    extent = [-5, 10, 41, 52]
    ax = plt.axes(
        projection=cartopy.crs.Robinson(central_longitude=central_lon))
    ax.set_extent(extent)
    ax.coastlines(resolution='10m')
    
    ax.add_feature(cartopy.feature.LAND, color='papayawhip')
    ax.add_feature(cartopy.feature.OCEAN, color='lightcyan')
    ax.add_feature(cartopy.feature.BORDERS, edgecolor='gray')
    
    route_handles = []
    for tour, line in zip(
            (initial_tour, final_tour),(':r','-b')):
        
        for origin, destination in ant_system.map_nodes(tour):
            path = [origin,destination]
            path.sort()
            try:
                route_index = data['paths'].tolist().index(path)
            except(ValueError):
                continue
            
            route = data['routes'][route_index]
            route_plot = ax.plot(
                route[:,0],
                route[:,1],
                line,
                linewidth=1.5,
                transform=ccrs.Geodetic(),
                )
        route_handles.append(route_plot[0])
        
    ax.legend(
        handles=route_handles,
        labels=(f'initial route ({asystem.best_L[1]:,.0f} km)',
                f'best route ({asystem.best_L[-1]:,.0f} km)'),
        )
    
    # coloring the regions
    shapefilename = 'maps/gadm36_FRA_shp/gadm36_FRA_1.shp'
    reader = shapereader.Reader(shapefilename)
    regions_info = list(reader.records())
    colormap = plt.cm.get_cmap('inferno',len(regions_info))
    
    for index_reg, region in enumerate(regions_info):
        ax.add_geometries([region.geometry],
                          crs=ccrs.PlateCarree(),
                          facecolor=colormap(index_reg),
                          edgecolor='gray',
                          linewidth=1.0,
                          alpha=0.5)
    
    ax.gridlines(linewidth=0.5,color='lightgray')
    
    for index_coord, coord in enumerate(data['coordinates']):
        ax.plot(
            coord[0],coord[1],
            'ok',
            markersize=5,
            transform=ccrs.Geodetic(),
        )
        ax.text(
            coord[0]-.25,coord[1],
            data['locations'][index_coord][0],
            va='center',ha='right',
            fontsize=8.5,
            bbox={'facecolor': 'gray', 'alpha': 0.8, 'pad': 1},
            transform=ccrs.Geodetic(),
            )
    
    print('Done')
    fig.savefig('figs/route_france.png',dpi=300)